apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

android {
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "org.pytorch.testapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters ABI_FILTERS.split(",")
        }
        buildConfigField("String", "MODULE_ASSET_NAME", "\"mobilenet2q.pt\"")
        buildConfigField("String", "LOGCAT_TAG", "@string/app_name")
        buildConfigField("long[]", "INPUT_TENSOR_SHAPE", "new long[]{1, 3, 224, 224}")
        addManifestPlaceholders([APP_NAME: "@string/app_name", MAIN_ACTIVITY: "org.pytorch.testapp.MainActivity"])
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
    }
    flavorDimensions "model", "build", "activity"
    productFlavors {
        mbq {
            dimension "model"
            applicationIdSuffix ".mbq"
            buildConfigField("String", "MODULE_ASSET_NAME", "\"mobilenet2q.pt\"")
            addManifestPlaceholders([APP_NAME: "MBQ"])
            buildConfigField("String", "LOGCAT_TAG", "\"pytorch-mbq\"")
        }
        resnet18 {
            dimension "model"
            applicationIdSuffix ".resneti18"
            buildConfigField("String", "MODULE_ASSET_NAME", "\"resnet18.pt\"")
            addManifestPlaceholders([APP_NAME: "RN18"])
            buildConfigField("String", "LOGCAT_TAG", "\"pytorch-resnet18\"")
        }
        local {
            dimension "build"
        }
        nightly {
            dimension "build"
        }
        camera {
            dimension "activity"
            addManifestPlaceholders([MAIN_ACTIVITY: "org.pytorch.testapp.CameraActivity"])
        }
        base {
            dimension "activity"
            sourceSets {
                main {
                    java {
                        exclude 'org/pytorch/testapp/CameraActivity.java'
                    }
                }
            }

        }
    }
    packagingOptions {
        doNotStrip '**.so'
        pickFirst '**/libfbjni.so'
    }

    // Filtering for CI
    if (!testAppAllVariantsEnabled.toBoolean()) {
        variantFilter { variant ->
            def names = variant.flavors*.name
            if (names.contains("nightly") || names.contains("camera")) {
                setIgnore(true)
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'

    localImplementation project(':pytorch_android')
    localImplementation project(':pytorch_android_torchvision')
    nightlyImplementation 'org.pytorch:pytorch_android:1.5.0-SNAPSHOT'
    nightlyImplementation 'org.pytorch:pytorch_android_torchvision:1.5.0-SNAPSHOT'

    def camerax_version = "1.0.0-alpha05"
    cameraImplementation "androidx.camera:camera-core:$camerax_version"
    cameraImplementation "androidx.camera:camera-camera2:$camerax_version"
    cameraImplementation 'com.google.android.material:material:1.0.0-beta01'
}
