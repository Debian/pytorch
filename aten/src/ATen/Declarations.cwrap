[[
  name: _th_masked_fill_
  cuda_bool: True
  cuda_bfloat16: True
  cname: maskedFill
  variants: function
  backends:
    - CUDA
  return: self
  options:
    - arguments:
      - THTensor* self
      - THByteTensor* mask
      - real value
]]
[[
  name: _th_masked_fill_bool_
  cuda_bool: True
  cuda_bfloat16: True
  cname: maskedFillBool
  variants: function
  backends:
    - CUDA
  return: self
  options:
    - arguments:
      - THTensor* self
      - THBoolTensor* mask
      - real value
]]
[[
  name: _th_masked_scatter_
  cpu_bool: True
  cuda_bool: True
  cpu_bfloat16: True
  cuda_bfloat16: True
  cname: maskedCopy
  variants: function
  return: self
  arguments:
    - THTensor* self
    - THByteTensor* mask
    - THTensor* source
]]
[[
  name: _th_masked_scatter_bool_
  cpu_bool: True
  cuda_bool: True
  cpu_bfloat16: True
  cuda_bfloat16: True
  cname: maskedCopyBool
  variants: function
  return: self
  arguments:
    - THTensor* self
    - THBoolTensor* mask
    - THTensor* source
]]
[[
  name: _th_masked_select
  cname: maskedSelect
  cpu_bool: True
  cpu_bfloat16: True
  variants:
    - function
  backends:
    - CPU
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THByteTensor* mask
]]
[[
  name: _th_masked_select_bool
  cname: maskedSelectBool
  cpu_bool: True
  cpu_bfloat16: True
  variants:
    - function
  backends:
    - CPU
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THBoolTensor* mask
]]
[[
  name: _th_nonzero
  cname: nonzero
  cpu_half: True
  cpu_bool: True
  cuda_bool: True
  cpu_bfloat16: True
  cuda_bfloat16: True
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THIndexTensor* result
      output: True
    - THTensor* self
]]
[[
  name: _th_index_select
  cuda_bool: True
  cuda_bfloat16: True
  cname: indexSelect
  variants:
    - function
  backends:
    - CUDA
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - long dim
    - THIndexTensor* index
]]
[[
  name: _th_index_copy_
  cname: indexCopy
  cpu_bool: True
  cuda_bool: True
  variants: function
  return: argument 0
  arguments:
    - THTensor* self
    - long dim
    - THIndexTensor* index
    - THTensor* source
]]
[[
  name: _th_take
  cpu_bool: True
  cuda_bool: True
  cname: take
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THIndexTensor* index
]]
[[
  name: _th_put_
  cpu_bool: True
  cuda_bool: True
  cname: put
  variants: function
  backends:
    - CPU
    - CUDA
  return: argument 0
  arguments:
    - THTensor* self
    - THIndexTensor* index
    - THTensor* source
    - bool accumulate
]]
[[
  name: _th_index_fill_
  cpu_bool: True
  cuda_bool: True
  cname: indexFill
  variants: function
  return: argument 0
  options:
    - arguments:
      - THTensor* self
      - long dim
      - THIndexTensor* index
      - real value
]]
[[
  name: _th_equal
  cname: equal
  cpu_bool: True
  cpu_bfloat16: True
  cpu_half: True
  cuda_bool: True
  variants:
    - function
  return: bool
  arguments:
    - THTensor* self
    - THTensor* other
]]
[[
  name: _th_mode
  variants: function
  cname: mode
  return: argument 0,1
  arguments:
    - arg: THTensor* values
      output: True
    - arg: THIndexTensor* indices
      output: True
    - THTensor* self
    - long dim
    - bool keepdim
]]
[[
  name: _th_sort
  cname: sort
  cpu_half: True
  variants:
    - function
  return: argument 0,1
  arguments:
    - arg: THTensor* values
      output: True
    - arg: THIndexTensor* indices
      output: True
    - THTensor* self
    - long dim
    - bool descending
]]
[[
  name: _th_topk
  cname: topk
  cuda_bfloat16: True
  backends:
    - CUDA
  variants:
    - function
  return: argument 0,1
  arguments:
    - arg: THTensor* values
      output: True
    - arg: THIndexTensor* indices
      output: True
    - THTensor* self
    - long k
    - long dim
    - bool largest
    - bool sorted
]]
[[
  name: _th_renorm
  cname: renorm
  types:
    - floating_point
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - real p
    - long dim
    - real maxnorm
]]
[[
  name: _th_renorm_
  types:
    - floating_point
  backends:
    - CPU
    - CUDA
  cname: renorm
  variants: function
  return: self
  arguments:
    - THTensor* self
    - THTensor* self
    - real p
    - long dim
    - real maxnorm
]]
[[
  name: _th_histc
  cname: histc
  types:
    - Float
    - Double
  backends:
    - CPU
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - long bins
    - real min
    - real max
]]
[[
  name: _th_trace
  cname: trace
  variants:
    - function
  return: accreal
  arguments:
    - THTensor* self
  backends:
    - CPU
]]
[[
  name: _th_fmod
  return: argument 0
  variants:
    - function
  backends:
    - CUDA
  options:
    - cname: fmod
      arguments:
        - arg: THTensor* result
          output: True
        - THTensor* self
        - real other
    - cname: cfmod
      arguments:
        - arg: THTensor* result
          output: True
        - THTensor* self
        - THTensor* other
]]
[[
  name: _th_fmod_
  return: argument 0
  variants: function
  backends:
    - CUDA
  options:
    - cname: fmod
      arguments:
        - THTensor* self
        - THTensor* self
        - real other
    - cname: cfmod
      arguments:
        - THTensor* self
        - THTensor* self
        - THTensor* other
]]
[[
  name: _th_dot
  backend_types: {CUDA: [floating_point], CPU: [all]}
  cname: dot
  cpu_half: True
  variants: function
  return: accreal
  arguments:
    - arg: THTensor* self
    - arg: THTensor* tensor
]]
[[
  name: _th_cross_kernel
  cname: crossKernel
  variants:
    - function
  backends:
    - CUDA
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THTensor* other
    - arg: int64_t dim
]]
[[
  name: _th_addmm
  cname: addmm
  cpu_bfloat16: True
  variants:
    - function
  return: argument 0
  backends: [CPU]
  options:
    - arguments:
      - arg: THTensor* result
        output: True
      - THTensor* self
      - THTensor* mat1
      - THTensor* mat2
      - real beta
      - real alpha
]]
[[
  name: _th_addmm_
  cpu_bfloat16: True
  cuda_bfloat16: True
  variants: [function]
  return: self
  backends: [CPU]
  options:
    - cname: addmm
      arguments:
      - THTensor* self
      - THTensor* self
      - THTensor* mat1
      - THTensor* mat2
      - real beta
      - real alpha
]]
[[
  name: _th_addr
  cname: addr
  cpu_bfloat16: True
  variants: function
  return: argument 0
  backends: [CPU]
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THTensor* vec1
    - THTensor* vec2
    - real beta
    - real alpha
]]
[[
  name: _th_addr_
  cpu_bfloat16: True
  cname: addr
  return: self
  variants: function
  backends: [CPU]
  arguments:
    - THTensor* self
    - THTensor* self
    - THTensor* vec1
    - THTensor* vec2
    - real beta
    - real alpha
]]
[[
[[
  name: _th_bmm
  cuda_bfloat16: True
  cname: baddbmm
  variants:
    - function
  backends:
    - CUDA
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - argument 0
    - THTensor* self
    - THTensor* mat2
    - CONSTANT AS_REAL(0)
    - CONSTANT AS_REAL(1)
]]
[[
  name: _th_addbmm
  cname: addbmm
  variants:
    - function
  backends: [CPU]
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THTensor* batch1
    - THTensor* batch2
    - real beta
    - real alpha
]]
[[
  name: _th_addbmm_
  cname: addbmm
  variants: function
  return: self
  backends: [CPU]
  arguments:
    - THTensor* self
    - THTensor* self
    - THTensor* batch1
    - THTensor* batch2
    - real beta
    - real alpha
]]
[[
  name: _th_baddbmm
  cuda_bfloat16: True
  cname: baddbmm
  variants:
    - function
  backends:
    - CUDA
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - arg: THTensor* self
    - THTensor* batch1
    - THTensor* batch2
    - real beta
    - real alpha
]]
[[
  name: _th_gels
  cname: gels
  types:
    - Float
    - Double
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0,1
  arguments:
    - arg: THTensor* res1
      output: True
    - arg: THTensor* res2
      output: True
    - THTensor* self
    - THTensor* A
]]
[[
  name: _th_eig
  cname: geev
  types:
    - Float
    - Double
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0,1
  arguments:
    - arg: THTensor* res1
      output: True
    - arg: THTensor* res2
      output: True
    - THTensor* self
    - bool eigenvectors
]]
[[
  name: _th_potri
  cname: potri
  types:
    - Float
    - Double
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* output
      output: True
    - THTensor* self
    - bool upper
]]
[[
  name: _th_geqrf
  cname: geqrf
  types:
    - Float
    - Double
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0,1
  arguments:
    - arg: THTensor* res1
      output: True
    - arg: THTensor* res2
      output: True
    - THTensor* self
]]
[[
  name: _th_orgqr
  cname: orgqr
  types:
    - Float
    - Double
  backends:
    - CPU
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THTensor* input2
]]
[[
  name: _th_ormqr
  cname: ormqr
  types:
    - Float
    - Double
  backends:
    - CPU
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THTensor* result
      output: True
    - THTensor* self
    - THTensor* input2
    - THTensor* input3
    - bool left
    - bool transpose
]]
[[
  name: _th_multinomial_alias_setup
  cname: multinomialAliasSetup
  variants:
    - function
  types:
    - floating_point
  backends:
    - CPU
    - CUDA
  return: argument 1,2
  arguments:
    - arg: THTensor* probs
    - arg: THIndexTensor* J
      output: True
    - arg: THTensor* q
      output: True
]]
[[
  name: _th_multinomial_alias_draw
  cname: multinomialAliasDraw
  types:
    - floating_point
  backends:
    - CPU
    - CUDA
  variants:
    - function
  return: argument 0
  arguments:
    - arg: THIndexTensor* result
      output: True
    - THTensor* q
    - THIndexTensor* J
    - long num_samples
    - c10::optional<Generator> generator
]]
[[
  name: _th_copy_ignoring_overlaps_
  cname: copyIgnoringOverlaps
  return: self
  variants: function
  backends:
    - CUDA
  arguments:
    - THTensor* self
    - THTensor* src
]]
